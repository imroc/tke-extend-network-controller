apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: tke-extend-network-controller
    control-plane: tke-extend-network-controller
  name: tke-extend-network-controller
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: tke-extend-network-controller
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: controller
      labels:
        control-plane: tke-extend-network-controller
    spec:
      containers:
      - args:
        - --metrics-bind-address=:8443
        - --leader-elect
        - --health-probe-bind-address=:8081
        - --zap-log-level=10
        command:
        - /tke-extend-network-controller
        envFrom:
        - secretRef:
            name: tke-extend-network-controller-env-t5d6b72m25
        image: imroc/tke-extend-network-controller:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: controller
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: tke-extend-network-controller
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: tke-extend-network-controller-webhook-server-cert

