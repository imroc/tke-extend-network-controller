apiVersion: networking.cloud.tencent.com/v1apha1
kind: DedicatedCLBService
metadata:
  namespace: demo
  name: dedicatedclbservice-sample
  labels:
    app.kubernetes.io/name: tke-extend-network-controller
    app.kubernetes.io/managed-by: kustomize
spec:
  lbRegion: ap-chengdu # 可选，CLB 所在地域，默认为集群所在地域
  selector: # 必选，pod 的 label 选择器，会为每个被选中的pod 自动分配一个CLB的监听器。
    app: gameserver
  minPort: 501 # 在 CLB 自动创建监听器，每个 Pod 占用一个端口，端口号范围在 501-600
  maxPort: 600
  ports: # 必选，自动创建的CLB监听器与后端pod端口的映射关系与自动创建的监听器配置
    - protocol: TCP # 端口监听的协议（TCP/UDP）
      targetPort: 9000 # 容器监听的端口
      addressPodAnnotation: networking.cloud.tencent.com/external-address-9000 # 可选，将外部地址自动注入到指定的 pod annotation 中
    - protocol: UDP
      targetPort: 8000
      addressPodAnnotation: networking.cloud.tencent.com/external-address-8080
  existedLbIds: # 复用已有的 CLB 实例，指定 CLB 实例 ID 的列表
    - lb-xxx
    - lb-yyy
    - lb-zzz
  listenerExtensiveParameters: | # 可选，指定创建监听器时的参数(JSON 格式)，完整参考 CreateListener 接口： https://cloud.tencent.com/document/api/214/30693 （由于是一个监听器只挂一个 Pod，通常不需要自定义监听器配置，因为健康检查、调度算法这些配置，对于只有一个 RS 的监听器没有意义）
    {
      "DeregisterTargetRst": true
    }
  lbAutoCreate:
    enable: true # 当 CLB 不足时，是否自动创建 CLB
    extensiveParameters: | # 购买 CLB 时的参数(JSON 字符串格式)：按流量计费，超强型4实例规格，带宽上限 60 Gbps （完整参数列表参考 CreateLoadBalancer 接口 https://cloud.tencent.com/document/api/214/30692）
      {
        "InternetAccessible": {
          "InternetChargeType": "TRAFFIC_POSTPAID_BY_HOUR",
          "InternetMaxBandwidthOut": 61440
        },
        "SlaType": "clb.c4.xlarge"
      }
